{{ 'section-image-text.css' | asset_url | stylesheet_tag }}

{% assign formatted_heading = section.settings.heading
  | replace: '{', "<span class='stylized'>"
  | replace: '}', '</span>'
%}

{% assign imageBlocks = section.blocks | where: 'type', 'image' %}
{% assign bulletBlocks = section.blocks | where: 'type', 'bullet' %}

<section class="image-text {% if section.settings.margin_bottom %}with-spacing{% endif %}">
  <div class="page-width">
    <div class="image-text__inner">
      <div class="image-text__image-wrapper">
        {% if imageBlocks.size > 1 %}
          {% comment %} slider {% endcomment %}
          <div class="image-text__images swiper">
            <div class="swiper-wrapper">
              {% for block in imageBlocks %}
                <div class="image-text__slide-content swiper-slide" data-slide-id="{{ block.id }}">
                  <div class="image-text__image-container">
                    <div class="image-text__image">{{ block.settings.image | image_url: width: '832px'| image_tag: widths: '832' }}</div>
                    {% if block.settings.text != blank or block.settings.sm_text != blank %}
                      <div class="image-text__image-overlay">
                        {% if block.settings.text != blank %}
                          <p class="body body-medium-weight image-text__overlay-text">
                            {{ block.settings.text | newline_to_br }}
                          </p>
                        {% endif %}
                        {% if block.settings.sm_text != blank %}
                          <p class="body body-xs body-bold-weight image-text__overlay-text-sm">
                            {{ block.settings.sm_text }}
                          </p>
                        {% endif %}
                      </div>
                    {% endif %}
                  </div>
                </div>
              {% endfor %}
            </div>
            <div class="image-text__progress"></div>
          </div>
        {% else %}
          {% unless imageBlocks.size == 0 %}
            {% comment %} single image {% endcomment %}
            {% if imageBlocks[0].settings.video != blank %}
              <div class="image-text__image-wrapper">
                {{ imageBlocks[0].settings.video }}
              </div>
            {% else %}
              <div class="image-text__image-wrapper">
                <div class="image-text__image">
                  {{ imageBlocks[0].settings.image | image_url: width: '832px'| image_tag: widths: '832' }}
                </div>
              </div>
            {% endif %}
          {% endunless %}
        {% endif %}
      </div>

      <div
        class="
          image-text__text-container
          {% if section.settings.layout == false %}
            image-text__text-container-right
          {% endif %}
        "
      >
        {% if formatted_heading != blank %}
          <h2 class="image-text__heading m-h4">{{ formatted_heading }}</h2>
        {% endif %}
        {% if section.settings.text != blank %}
          <p class="body image-text__paragraph">{{ section.settings.text | newline_to_br }}</p>
        {% endif %}
        {% if bulletBlocks.size != 0 %}
          <ul class="image-text__bullet-list list-unstyled">
            {% for bullet in bulletBlocks %}
              {% assign formatted_bullet = bullet.settings.heading
                | replace: '{', "<span class='glow'>"
                | replace: '}', '</span>'
                | replace: '$', "<span class='money'>$</span>"
              %}
              <li class="image-text__bullet body">
                {% assign isReversed = forloop.index | modulo: 2 %}
                <span class="bullet-emoji float {% if isReversed == 0 %} is-reversed{% endif %}">
                  {{- bullet.settings.title -}}
                </span>
                {{ formatted_bullet }}
              </li>
            {% endfor %}
          </ul>
        {% endif %}

        {% if section.settings.btn_text != blank or section.settings.link != blank %}
          <div class="image-text__button-wrapper">
            {% if section.settings.btn != blank and section.settings.btn_text != blank %}
              <a href="{{ section.settings.btn }}" class="button">{{ section.settings.btn_text }}</a>
            {% elsif section.settings.btn == blank and section.settings.btn_text != blank %}
              <button class="button" data-open-quiz>{{ section.settings.btn_text }}</button>
            {% endif %}

            {% if section.settings.link != blank and section.settings.link_text != blank %}
              <a href="{{ section.settings.link }}" class="text-link body body-sm body-bold-weight">
                {{- section.settings.link_text -}}
              </a>
            {% endif %}
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</section>

{% javascript %}
  const imageSlider = document.querySelector('.image-text__images');

  // IMPORTANT! If autoplay delay timing is changed,
  // update the animation timing for the progress dots as well
  // in the section-image-text.css file
  if (imageSlider) {
    const imageSwiper = new Swiper(imageSlider, {
      slidesPerView: 1,
      effect: 'fade',
      autoplay: {
        delay: 5000,
      },
      pagination: {
        el: '.image-text__progress',
        renderBullet: function (index, className) {
          return `<div class="image-text__bullet-wrapper ${className}" data-slide-id="${index}">
                  <div class="image-text__progress-bar"><div class="image-text__progress-bar-fill"></div></div>
                </div>`;
        },
      },
    });
  }

  function getCookie(cname) {
    // const value = `; ${document.cookie}`;
    // const parts = value.split(`; ${name}=`);
    // if (parts.length === 2) return parts.pop().split(';').shift();

    let name = cname + "=";
    let decodedCookie = decodeURIComponent(document.cookie);
    let ca = decodedCookie.split(';');
    for(let i = 0; i <ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length, c.length);
      }
    }
    return null;
  }

  function getSubPrice() {
      const cookies = ['redirect_inspire', 'redirect_ut', 'redirect_ut_direct', 'redirect_paceline', 'redirect_sweatcoin', 'redirect_miles', 'redirect_studentbeans']
  
      let subscriptionCookie = cookies.filter( cookieName => getCookie(cookieName) != null )
      let subPrice = ''
  
      switch(subscriptionCookie[0]) {
        case 'redirect_ut':
          subPrice = '9.95'
          discount_name = 'UTM_GEN_AUTOMATIC'
          discount_desc = '90% OFF'
          break;
        case 'redirect_ut_direct':
          subPrice = '9'
          discount_name = ''
          discount_desc = ''
          break
        case 'redirect_paceline':
          subPrice = '29'
          discount_name = ''
          discount_desc = ''
          break
        case 'redirect_sweatcoin':
          subPrice = '29'
          discount_name = 'ADD_PEN'
          discount_desc = 'free pen included with purchase'
          break
        case 'redirect_miles':
          subPrice = '9'
          discount_name = 'MILES_AUTOMATIC'
          discount_desc = '88% OFF'
          break
        case 'redirect_studentbeans':
          subPrice = '9'
          discount_name = ''
          discount_desc = ''
          break
        case 'redirect_inspire':
          subPrice = '$13.5'
          discount_name = 'Subscribe & Save'
          discount_desc = '80% OFF'
          break
        default:
          subPrice = '29'
          discount_name = 'SUB-N-SAVE'
          discount_desc = '50% OFF'
          break
      } 
  
      return [subPrice, discount_name, discount_desc]
  }

  subPrice = getSubPrice()
  console.log('hello')
  console.log(subPrice)
  
  // setTimeout(function(){
  //   $('.glow').first().html('<span class="money">$</span>' + subPrice)
  // }, 100);

  setTimeout(function(){
    $('.glow').first().html('<span class="money">$</span>' + subPrice)
  }, 1000);
{% endjavascript %}

{% schema %}
{
  "name": "Image and Text Blocks",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "checkbox",
      "id": "layout",
      "label": "Text on right",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "margin_bottom",
      "label": "Margin bottom",
      "default": true
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "textarea",
      "id": "heading",
      "label": "Heading",
      "info": "Wrap italized text in {}"
    },
    {
      "type": "inline_richtext",
      "id": "text",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "url",
      "id": "btn",
      "label": "Link",
      "info": "Leave blank to have button open quiz"
    },
    {
      "type": "text",
      "id": "btn_text",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Text link"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Link"
    },
    {
      "type": "text",
      "id": "link_text",
      "label": "Text"
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "video",
          "id": "video",
          "label": "Video"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Overlay text"
        },
        {
          "type": "text",
          "id": "sm_text",
          "label": "Small overlay text"
        }
      ]
    },
    {
      "type": "bullet",
      "name": "Bullet list",
      "settings": [
        {
          "type": "textarea",
          "id": "title",
          "label": "SVG or text emoji"
        },
        {
          "type": "textarea",
          "id": "heading",
          "label": "Text",
          "info": "Wrap glowing text in {}"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image and Text Blocks"
    }
  ]
}
{% endschema %}
